// Mocks generated by Mockito 5.4.4 from annotations
// in kototinder/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:kototinder/cubits/liked_cats_cubit.dart' as _i5;
import 'package:kototinder/models/cat.dart' as _i4;
import 'package:kototinder/services/cat_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CatStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatStorage extends _i1.Mock implements _i2.CatStorage {
  MockCatStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveCachedCat(_i4.Cat? cat) => (super.noSuchMethod(
        Invocation.method(
          #saveCachedCat,
          [cat],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Cat>> getCachedCats() => (super.noSuchMethod(
        Invocation.method(
          #getCachedCats,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Cat>>.value(<_i4.Cat>[]),
      ) as _i3.Future<List<_i4.Cat>>);

  @override
  _i3.Future<void> setCatAction(
    String? imageUrl,
    String? action, [
    DateTime? timestamp,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCatAction,
          [
            imageUrl,
            action,
            timestamp,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> saveCatAction(
    _i4.Cat? cat,
    String? action,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCatAction,
          [
            cat,
            action,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.LikedCat>> getLikedCatsWithTimestamp() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLikedCatsWithTimestamp,
          [],
        ),
        returnValue: _i3.Future<List<_i5.LikedCat>>.value(<_i5.LikedCat>[]),
      ) as _i3.Future<List<_i5.LikedCat>>);
}
